package com.ajith.voipcall;

import android.app.Application;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class RNVoipBroadcastReciever extends  BroadcastReceiver {

    OkHttpClient client = new OkHttpClient();

    Call post(String url, String roomid, String userid, Callback callback) {
        RequestBody formBody = new FormBody.Builder()
                .add("roomid", roomid)
                .add("userid", userid)
                .build();

        Request request = new Request.Builder()
                .url(url)
                .post(formBody)
                .build();
        Call call = client.newCall(request);
        call.enqueue(callback);
        return call;
    }


    void dismissCall(String roomid, String userid) {
        String url = "http://tntest.terasys-network.info:3333/api/v1/dismiss";
        Log.e("dismiss", url);
            post(url, roomid, userid, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    e.printStackTrace();
                    Log.e("dismiss call error:", e.toString());
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    Log.e("dismiss call to server:", response.body().string());
                }
            });
    };
    @Override
    public void onReceive(Context context, Intent intent) {
        Application applicationContext = (Application) context.getApplicationContext();

        RNVoipNotificationHelper rnVoipNotificationHelper = new RNVoipNotificationHelper(applicationContext);
        int notificationId = intent.getIntExtra("notificationId",0);
        String callerId = intent.getStringExtra("callerId"); //room id
        String roomid = intent.getStringExtra("roomid"); //room id

        switch (intent.getAction()){
            case "callDismiss":
                RNVoipRingtunePlayer.getInstance(context).stopMusic();
                rnVoipNotificationHelper.clearNotification(notificationId);
                dismissCall(roomid, callerId);
               // rnVoipNotificationHelper.showMissCallNotification(intent.getStringExtra("missedCallTitle"), intent.getStringExtra("missedCallBody"), intent.getStringExtra("callerId"));
                break;
            case "callTimeOut":
                dismissCall(roomid, callerId);
                rnVoipNotificationHelper.showMissCallNotification(intent.getStringExtra("missedCallTitle"), intent.getStringExtra("missedCallBody"), intent.getStringExtra("callerId"));
                break;
            default:
                break;
        }

    }
}
